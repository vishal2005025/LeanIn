<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta http-equiv="Content-Language" content="en" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>
    Analytics Dashboard
  </title>
  <meta name="viewport"
    content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, shrink-to-fit=no" />
  <meta name="description" content="This is an example dashboard created using build-in elements and components." />
  <meta name="msapplication-tap-highlight" content="no" />
  <link href="https://demo.dashboardpack.com/architectui-html-free/main.css" rel="stylesheet" />
</head>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<body>
  <div class="app-container app-theme-white body-tabs-shadow fixed-sidebar fixed-header">
    <div class="app-header header-shadow " style="background-color: black">
      <div class="app-header__logo" style="background-color: black">
        <!-- <div class="logo-src"></div> -->
        <div class="header__pane ml-auto">
          <div>
            <button type="button" class="hamburger close-sidebar-btn hamburger--elastic" data-class="closed-sidebar">
              <span class="hamburger-box">
                <span class="hamburger-inner"></span>
              </span>
            </button>
          </div>
        </div>
      </div>
      <div class="app-header__mobile-menu">
        <div>
          <button type="button" class="hamburger hamburger--elastic mobile-toggle-nav">
            <span class="hamburger-box">
              <span class="hamburger-inner"></span>
            </span>
          </button>
        </div>
      </div>
      <div class="app-header__menu">
        <span>
          <button type="button" class="btn-icon btn-icon-only btn btn-primary btn-sm mobile-toggle-header-nav">
            <!-- <span class="btn-icon-wrapper">
                <i class="fa fa-ellipsis-v fa-w-6"></i>
              </span> -->
          </button>
        </span>
      </div>
      <div class="app-header__content">
        <div class="app-header-left">
          <div class="search-wrapper">
            <div class="input-holder">
              <input type="text" class="search-input" placeholder="Type to search" />
              <button class="search-icon"><span></span></button>
            </div>
            <button class="close"></button>
          </div>
        </div>
        <div class="app-header-right">
          <div class="header-btn-lg pr-0">
            <div class="widget-content p-0">
              <div class="widget-content-wrapper">
                <div class="widget-content-left"></div>
                <div class="widget-content-left ml-3 header-user-info">
                  <!-- <div class="widget-heading">Alina Mclourd</div>
                    <div class="widget-subheading">VP People Manager</div> -->
                </div>
                <div class="widget-content-right header-user-info ml-3">
                  <!-- <button
                      type="button"
                      class="btn-shadow p-1 btn btn-primary btn-sm show-toastr-example"
                    >
                      <i class="fa text-white fa-calendar pr-1 pl-1"></i>
                    </button> -->
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="app-main">
      <div class="app-sidebar sidebar-shadow">
        <div class="app-header__logo">
          <div class="logo-src"></div>
          <div class="header__pane ml-auto">
            <div>
              <button type="button" class="hamburger close-sidebar-btn hamburger--elastic" data-class="closed-sidebar">
                <span class="hamburger-box">
                  <span class="hamburger-inner"></span>
                </span>
              </button>
            </div>
          </div>
        </div>
        <div class="app-header__mobile-menu">
          <div>
            <button type="button" class="hamburger hamburger--elastic mobile-toggle-nav">
              <span class="hamburger-box">
                <span class="hamburger-inner"></span>
              </span>
            </button>
          </div>
        </div>
        <div class="app-header__menu">
          <span>
            <button type="button" class="btn-icon btn-icon-only btn btn-primary btn-sm mobile-toggle-header-nav">
              <span class="btn-icon-wrapper">
                <i class="fa fa-ellipsis-v fa-w-6"></i>
              </span>
            </button>
          </span>
        </div>
        <div class="scrollbar-sidebar" style="background-color: black">
          <div class="app-sidebar__inner">
            <ul class="vertical-nav-menu">
              <!-- <li class="app-sidebar__heading">Dashboards</li> -->
              <li>
                <a href="index.html" class="mm-active">
                  <i class="metismenu-icon pe-7s-rocket"></i>
                  Dashboard
                </a>
              </li>
              <div
                style="font-size: larger;  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;">
                <li>
                  <a href="earthquake.html" style="color: white; text-decoration: none;"
                    onmouseover="this.style.color='black'" onmouseout="this.style.color='white'">
                    <i class="metismenu-icon pe-7s-mouse"></i>Eathquake Prediction
                  </a>
                </li>
                <li>
                  <a href="http://127.0.0.1:5000/fire" style="color: white; text-decoration: none;"
                    onmouseover="this.style.color='black'" onmouseout="this.style.color='white'">
                    <i class="metismenu-icon pe-7s-graph2"></i>Fire Prediction
                  </a>
                </li>
                <li>
                  <a href="http://127.0.0.1:5000/flood" style="color: white; text-decoration: none;"
                    onmouseover="this.style.color='black'" onmouseout="this.style.color='white'">
                    <i class="metismenu-icon pe-7s-pendrive"></i>Flood Prediction
                  </a>
                </li>
                <li>
                  <a href="http://127.0.0.1:5000/image" style="color: white; text-decoration: none;"
                    onmouseover="this.style.color='black'" onmouseout="this.style.color='white'">
                    <i class="metismenu-icon pe-7s-pendrive"></i>Satellite Monitoring
                  </a>
                </li>
                <li>
                  <a href="/emergency" style="color: white; text-decoration: none;"
                    onmouseover="this.style.color='black'" onmouseout="this.style.color='white'">
                    <i class="metismenu-icon pe-7s-pendrive"></i>Live
                  </a>
                </li>
                <!-- <li>
                  <a href="/chartsjsp" style="color: white; text-decoration: none;"
                    onmouseover="this.style.color='black'" onmouseout="this.style.color='white'">
                    <i class="metismenu-icon pe-7s-pendrive"></i>Post Effects
                  </a>
                </li> -->

                <li>
                  <form action="/chartsjsp" class="nav-link" id="newChart" method="post">
                    <button
                      style="background-color: transparent; cursor: pointer; border: none; color: white; width: 100%; text-align: left; padding: 10px;">
                      <span class="menu-title">
                        <b>Post Effects</b>
                      </span>
                      <i class="mdi mdi-chart-bar menu-icon"></i>
                    </button>
                  </form>

                  <style>
                    @media (max-width: 768px) {
                      #newChart button {
                        width: 100%;
                        /* Set width to 100% when the screen size is 768 pixels or less */
                        text-align: left;
                        /* Align text to the left for better readability */
                        padding-left: 20px;
                        /* Add some left padding for better spacing */
                      }
                    }
                  </style>

                </li>
              </div>
            </ul>
          </div>
        </div>
      </div>
      <div class="app-main__outer">
        <div class="app-main__inner" style="background-color: rgb(3, 26, 85);">
          <div class="app-page-title" style="background-color: rgb(3, 26, 85); color: aliceblue;">
            <div class="page-title-wrapper">
              <!-- <div class="page-title-heading "
                style="font-size: xx-large; font-weight: 600; text-shadow: 2px 2px 4px rgba(118, 176, 186, 0.5);"> -->
              <!-- <div class="page-title-icon"> -->
              <!-- <i class="pe-7s-car icon-gradient bg-mean-fruit"> </i>
                  </div> -->
              <div class="row col-12">
                <div class="col-9"
                  style="font-size: xx-large; font-weight: 600; text-shadow: 2px 2px 4px rgba(118, 176, 186, 0.5);">
                  Analytics Dashboard</div>
                <div class="col-3 d-flex justify-content-end">
                  <button class="btn btn-danger w-50 p-2">ALERT</button>
                  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
                  <script>
                    $(document).ready(function () {
                      $(".btn-danger").click(function () {
                        $.post("/api/send-email",
                          {
                            email: "Department of Disaster Management",
                            subject: "Flood alert tonight 9:00 pm",
                            message: "Alert Flood expected !!! To send sos click on the link http://localhost:8000/sos"
                          },
                          function (data, status) {
                            if (status === 'success') {
                              alert("Alert sent");
                            } else {
                              alert("Failed to send alert");
                            }
                          });
                      });
                    });
                  </script>
                </div>
                <div class="page-title-subheading col-9">Weekly graphs of atmospheric conditions</div>

              </div>

              <!-- </div> -->
              <div class="page-title-actions"></div>
            </div>
          </div>



          <div class="row">
            <!-- First Column -->
            <div class="col-md-12 col-lg-6">
              <div class="mb-3 card" style="background-color: white">
                <div>
                  <canvas id="myChart"></canvas>
                </div>
                <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
                <script>
                  // Function to fetch daily river discharge data and update the chart
                  async function fetchDailyRiverDischargeData() {
                    try {
                      // Make the API call
                      const response = await fetch('https://flood-api.open-meteo.com/v1/flood?latitude=20.5937&longitude=78.9629&daily=river_discharge');
                      const data = await response.json();

                      // Extract daily river discharge data from the API response
                      const dailyRiverDischargeData = data.daily;

                      // Update the chart with the new data
                      updateChart(dailyRiverDischargeData);
                    } catch (error) {
                      console.error('Error fetching daily river discharge data:', error.message);
                    }
                  }

                  // Function to update the line chart
                  function updateChart(dailyRiverDischargeData) {
                    const ctx = document.getElementById('myChart').getContext('2d');

                    new Chart(ctx, {
                      type: 'line',
                      data: {
                        labels: dailyRiverDischargeData.time,
                        datasets: [{
                          label: 'Daily River Discharge',
                          data: dailyRiverDischargeData.river_discharge,
                          borderColor: 'blue',
                          borderWidth: 2,
                          fill: false,
                        }],
                      },
                      options: {
                        scales: {
                          x: {
                            type: 'time',
                            time: {
                              unit: 'day',
                              displayFormats: {
                                day: 'MMM D',
                              },
                            },
                            title: {
                              display: true,
                              text: 'Date',
                            },
                          },
                          y: {
                            title: {
                              display: true,
                              text: 'River Discharge (m³/s)',
                            },
                          },
                        },
                      },
                    });
                  }

                  // Call the function to fetch and update data when the page loads
                  fetchDailyRiverDischargeData();
                </script>
              </div>
            </div>

            <!-- Second Column -->
            <div class="col-md-12 col-lg-6">
              <div class="mb-3 card" style="background-color: white">
                <div>
                  <canvas id="myChart2"></canvas>
                </div>
                <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
                <script>
                  // Function to fetch data from the API
                  async function fetchWindSpeedData() {
                    const apiUrl = 'https://api.open-meteo.com/v1/forecast?latitude=20.5937&longitude=78.9629&hourly=wind_speed_10m&timezone=Asia%2FSingapore';

                    try {
                      const response = await fetch(apiUrl);
                      const data = await response.json();
                      return data.hourly.wind_speed_10m;
                    } catch (error) {
                      console.error('Error fetching data:', error.message);
                      return [];
                    }
                  }
                  async function updateWindSpeedChart() {
                    const windSpeedData = await fetchWindSpeedData();

                    const ctx = document.getElementById('myChart2').getContext('2d');

                    // Get the current time
                    const currentTime = new Date();
                    const currentHour = currentTime.getHours();

                    // Generate labels for the next 7 days with hourly intervals
                    const labels = Array.from({ length: windSpeedData.length }, (_, i) => {
                      const hour = (currentHour + i) % 24; // Ensure it loops back to 0 after reaching 23
                      return `${hour}:00`; // Format as "HH:00"
                    });

                    new Chart(ctx, {
                      type: 'bar',
                      data: {
                        labels: labels,
                        datasets: [{
                          label: 'Wind Speed (m/s)',
                          data: windSpeedData,
                          backgroundColor: 'blue',
                          borderWidth: 1,
                        }],
                      },
                      options: {
                        scales: {
                          x: {
                            ticks: {
                              autoSkip: true, // Automatically skip labels to prevent overcrowding
                              maxTicksLimit: 10, // Limit the maximum number of displayed labels
                              maxRotation: 45, // Rotate labels for better readability
                            },
                          },
                          y: {
                            beginAtZero: true,
                          },
                        },
                      },
                    });
                  }


                  // Call the function to update the chart
                  updateWindSpeedChart();
                </script>
              </div>
            </div>
          </div>




          <div class="row">

            <div class="col-md-12 col-lg-6">
              <div class="mb-3 card" style="background-color: white">
                <div>
                  <canvas id="myBubbleChart"></canvas>
                </div>
                <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
                <script>
                  // Function to fetch data from the API
                  async function fetchRainData() {
                    const apiUrl = 'https://api.open-meteo.com/v1/forecast?latitude=20.5937&longitude=78.9629&hourly=rain&timezone=Asia%2FSingapore';

                    try {
                      const response = await fetch(apiUrl);
                      const data = await response.json();
                      return data.hourly.rain;
                    } catch (error) {
                      console.error('Error fetching data:', error.message);
                      return [];
                    }
                  }

                  // Function to update the bubble chart with rain data
                  async function updateRainBubbleChart() {
                    const rainData = await fetchRainData();

                    const ctx = document.getElementById('myBubbleChart').getContext('2d');

                    // Generate labels for the next 7 days with hourly intervals
                    const currentTime = new Date();
                    const currentHour = currentTime.getHours();
                    const labels = Array.from({ length: rainData.length }, (_, i) => {
                      const hour = (currentHour + i) % 24; // Ensure it loops back to 0 after reaching 23
                      return `${hour}:00`; // Format as "HH:00"
                    });

                    // Create a dataset using the rain data
                    const data = {
                      labels: labels,
                      datasets: [{
                        label: 'Rain Intensity',
                        data: rainData.map(value => ({ x: value, y: 0, r: value * 5 })), // Adjust the scaling factor as needed
                        backgroundColor: '#ffff99',
                        borderColor: '#666600',
                        borderWidth: 1,
                      }],
                    };

                    // Create chart configuration
                    const config = {
                      type: 'bubble',
                      data: data,
                      options: {
                        scales: {
                          x: {
                            beginAtZero: true,
                          },
                          y: {
                            beginAtZero: true,
                          },
                        },
                      },
                    };

                    // Create a new Chart instance
                    new Chart(ctx, config);
                  }

                  // Call the function to update the bubble chart
                  updateRainBubbleChart();
                </script>
              </div>
            </div>

            <div class="col-md-12 col-lg-6" style="height: 284px; width: 644px;">
              <div class="mb-3 card" style="background-color: white">
                <div>
                  <canvas id="myProlinechart"></canvas>
                </div>
                <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

                <script>
                  // Function to fetch data from the API
                  async function fetchData() {
                    const apiUrl = 'https://api.open-meteo.com/v1/forecast?latitude=20.5937&longitude=78.9629&hourly=temperature_2m,relative_humidity_2m&timezone=Asia%2FSingapore';

                    try {
                      const response = await fetch(apiUrl);
                      const data = await response.json();
                      return data.hourly;
                    } catch (error) {
                      console.error('Error fetching data:', error.message);
                      return { temperature_2m: [], relative_humidity_2m: [] };
                    }
                  }

                  // Function to update the line chart with temperature and humidity data
                  async function updateLineChart() {
                    const { temperature_2m, relative_humidity_2m } = await fetchData();

                    const ctx = document.getElementById('myProlinechart').getContext('2d');

                    // Generate labels for the next 7 days with hourly intervals
                    const currentTime = new Date();
                    const currentHour = currentTime.getHours();
                    const labels = Array.from({ length: temperature_2m.length }, (_, i) => {
                      const hour = (currentHour + i) % 24; // Ensure it loops back to 0 after reaching 23
                      return `${hour}:00`; // Format as "HH:00"
                    });

                    // Create datasets using temperature and humidity data
                    const data = {
                      labels: labels,
                      datasets: [
                        {
                          label: 'Temperature',
                          data: temperature_2m,
                          borderColor: 'red',
                          backgroundColor: 'rgba(255, 0, 0, 0.5)',
                          tension: 0.7,
                        },
                        {
                          label: 'Humidity',
                          data: relative_humidity_2m,
                          borderColor: 'blue',
                          backgroundColor: 'rgba(0, 0, 255, 0.5)',
                          tension: 0.7,
                        },
                      ],
                    };

                    // Create chart configuration
                    const config = {
                      type: 'line',
                      data: data,
                      options: {
                        animations: {
                          radius: {
                            duration: 400,
                            easing: 'linear',
                            loop: (context) => context.active,
                          },
                        },
                        hoverRadius: 12,
                        hoverBackgroundColor: 'green',
                        interaction: {
                          mode: 'nearest',
                          intersect: false,
                          axis: 'x',
                        },
                        plugins: {
                          tooltip: {
                            enabled: true,
                          },
                        },
                        scales: {
                          x: {
                            ticks: {
                              autoSkip: true,
                              maxTicksLimit: 10,
                              maxRotation: 45,
                            },
                          },
                          y: {
                            beginAtZero: true,
                          },
                        },
                      },
                    };

                    // Create a new Chart instance
                    new Chart(ctx, config);
                  }

                  // Call the function to update the line chart
                  updateLineChart();
                </script>
              </div>
            </div>
          </div>



          <div class="row">
            <div class="col-md-12 col-lg-6">
              <div class="mb-3 card" style="background-color: white">
                <canvas id="polarAreachart" width="800" height="400"></canvas>
              </div>
              <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

              <script>
                // Function to fetch UV index data from the API
                async function fetchUVIndexData() {
                  const apiUrl = 'https://api.open-meteo.com/v1/forecast?latitude=20.5937&longitude=78.9629&daily=uv_index_max&timezone=Asia%2FSingapore';

                  try {
                    const response = await fetch(apiUrl);
                    const data = await response.json();
                    return data.daily.uv_index_max;
                  } catch (error) {
                    console.error('Error fetching UV index data:', error.message);
                    return [0, 0, 0, 0, 0, 0, 0];
                  }
                }

                // Function to update the polar area chart with UV index data
                async function updatePolarAreaChart() {
                  const uvIndexData = await fetchUVIndexData();

                  const ctx = document.getElementById('polarAreachart').getContext('2d');

                  // Create dataset using UV index data
                  const data = {
                    labels: ['Day 1', 'Day 2', 'Day 3', 'Day 4', 'Day 5', 'Day 6', 'Day 7'],
                    datasets: [
                      {
                        label: 'UV Index',
                        data: uvIndexData,
                        backgroundColor: [
                          'rgba(255, 0, 0, 0.5)',
                          'rgba(255, 165, 0, 0.5)',
                          'rgba(255, 255, 0, 0.5)',
                          'rgba(0, 128, 0, 0.5)',
                          'rgba(0, 0, 255, 0.5)',
                        ],
                        height: '50px'
                      },
                    ],
                  };

                  // Create chart configuration
                  const config = {
                    type: 'polarArea',
                    data: data,
                    options: {
                      responsive: true,
                      plugins: {
                        legend: {
                          position: 'top',
                        },
                        title: {
                          display: true,
                          text: 'UV Index for Next 7 Days',
                        },
                      },
                    },
                  };

                  // Create a new Chart instance
                  new Chart(ctx, config);
                }

                // Call the function to update the polar area chart
                updatePolarAreaChart();
              </script>
            </div>

            <div class="col-md-12 col-lg-6">
              <div class="mb-3 card" style="background-color: white">
                <canvas id="prolineChart" width="800" height="400"></canvas>
              </div>

              <script>
                // Function to fetch temperature and soil moisture data from the API
                async function fetchData() {
                  const apiUrl = 'https://api.open-meteo.com/v1/forecast?latitude=52.52&longitude=13.41&hourly=temperature_2m,soil_moisture_3_to_9cm';

                  try {
                    const response = await fetch(apiUrl);
                    const data = await response.json();
                    return data.hourly;
                  } catch (error) {
                    console.error('Error fetching data:', error.message);
                    return [];
                  }
                }

                // Function to update the line chart with temperature and soil moisture data
                async function updateLineChart() {
                  const data = await fetchData();

                  const ctx = document.getElementById('prolineChart').getContext('2d');

                  // Extract temperature and soil moisture data
                  const temperatureData = data.temperature_2m;
                  const soilMoistureData = data.soil_moisture_3_to_9cm;

                  // Generate labels for the next 7 days with hourly intervals
                  const labels = Array.from({ length: 24 * 7 }, (_, i) => `${i % 24}:00`);

                  // Create dataset using temperature and soil moisture data
                  const datasets = [
                    {
                      label: 'Temperature (°C)',
                      data: temperatureData,
                      borderColor: 'red',
                      backgroundColor: 'rgba(255, 0, 0, 0.5)',
                      tension: 0.7,
                    },
                    {
                      label: 'Soil Moisture',
                      data: soilMoistureData,
                      borderColor: 'blue',
                      backgroundColor: 'rgba(0, 0, 255, 0.5)',
                      tension: 0.7,
                    },
                  ];

                  // Create chart configuration
                  const config = {
                    type: 'line',
                    data: {
                      labels: labels,
                      datasets: datasets,
                    },
                    options: {
                      animations: {
                        radius: {
                          duration: 400,
                          easing: 'linear',
                          loop: (context) => context.active,
                        },
                      },
                      hoverRadius: 12,
                      hoverBackgroundColor: 'green',
                      interaction: {
                        mode: 'nearest',
                        intersect: false,
                        axis: 'x',
                      },
                      scales: {
                        x: {
                          ticks: {
                            autoSkip: true,
                            maxTicksLimit: 10,
                            maxRotation: 45,
                          },
                        },
                        y: {
                          beginAtZero: true,
                        },
                      },
                    },
                  };

                  // Create a new Chart instance
                  new Chart(ctx, config);
                }

                // Call the function to update the line chart
                updateLineChart();
              </script>
            </div>


          </div>

          <div class="row">
            <div class="col-md-12">
              <div class="main-card mb-3 card">
                <div class="card-header">
                  Our Volunteers
                  <div class="btn-actions-pane-right">
                    <div role="group" class="btn-group-sm btn-group">
                      <button class="active btn btn-focus">Last Week</button>
                      <button class="btn btn-focus">All Month</button>
                    </div>
                  </div>
                </div>
                <div class="table-responsive">
                  <table class="align-middle mb-0 table table-borderless table-striped table-hover">
                    <thead>
                      <tr>
                        <th class="text-center">#</th>
                        <th>Name</th>
                        <th class="text-center">City</th>
                        <!-- <th class="text-center">Status</th> -->
                        <th class="text-center">Actions</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td class="text-center text-muted">#345</td>
                        <td>
                          <div class="widget-content p-0">
                            <div class="widget-content-wrapper">
                              <div class="widget-content-left mr-3">
                                <div class="widget-content-left">
                                  <img width="40" class="rounded-circle" src="assets/images/avatars/4.jpg" alt="" />
                                </div>
                              </div>
                              <div class="widget-content-left flex2">
                                <div class="widget-heading">John Doe</div>
                                <div class="widget-subheading opacity-7">
                                  Web Developer
                                </div>
                              </div>
                            </div>
                          </div>
                        </td>
                        <td class="text-center">Madrid</td>
                        <!-- <td class="text-center">
                            <div class="badge badge-warning">Pending</div>
                          </td> -->
                        <td class="text-center">
                          <button type="button" id="PopoverCustomT-1" class="btn btn-primary btn-sm">
                            Details
                          </button>
                        </td>
                      </tr>
                      <tr>
                        <td class="text-center text-muted">#347</td>
                        <td>
                          <div class="widget-content p-0">
                            <div class="widget-content-wrapper">
                              <div class="widget-content-left mr-3">
                                <div class="widget-content-left">
                                  <img width="40" class="rounded-circle" src="assets/images/avatars/3.jpg" alt="" />
                                </div>
                              </div>
                              <div class="widget-content-left flex2">
                                <div class="widget-heading">
                                  Ruben Tillman
                                </div>
                                <div class="widget-subheading opacity-7">
                                  Etiam sit amet orci eget
                                </div>
                              </div>
                            </div>
                          </div>
                        </td>
                        <td class="text-center">Berlin</td>
                        <!-- <td class="text-center">
                            <div class="badge badge-success">Completed</div>
                          </td> -->
                        <td class="text-center">
                          <button type="button" id="PopoverCustomT-2" class="btn btn-primary btn-sm">
                            Details
                          </button>
                        </td>
                      </tr>
                      <tr>
                        <td class="text-center text-muted">#321</td>
                        <td>
                          <div class="widget-content p-0">
                            <div class="widget-content-wrapper">
                              <div class="widget-content-left mr-3">
                                <div class="widget-content-left">
                                  <img width="40" class="rounded-circle" src="assets/images/avatars/2.jpg" alt="" />
                                </div>
                              </div>
                              <div class="widget-content-left flex2">
                                <div class="widget-heading">Elliot Huber</div>
                                <div class="widget-subheading opacity-7">
                                  Lorem ipsum dolor sic
                                </div>
                              </div>
                            </div>
                          </div>
                        </td>
                        <td class="text-center">London</td>
                        <!-- <td class="text-center">
                            <div class="badge badge-danger">In Progress</div>
                          </td> -->
                        <td class="text-center">
                          <button type="button" id="PopoverCustomT-3" class="btn btn-primary btn-sm">
                            Details
                          </button>
                        </td>
                      </tr>
                      <tr>
                        <td class="text-center text-muted">#55</td>
                        <td>
                          <div class="widget-content p-0">
                            <div class="widget-content-wrapper">
                              <div class="widget-content-left mr-3">
                                <div class="widget-content-left">
                                  <img width="40" class="rounded-circle" src="assets/images/avatars/1.jpg" alt="" />
                                </div>
                              </div>
                              <div class="widget-content-left flex2">
                                <div class="widget-heading">
                                  Vinnie Wagstaff
                                </div>
                                <div class="widget-subheading opacity-7">
                                  UI Designer
                                </div>
                              </div>
                            </div>
                          </div>
                        </td>
                        <td class="text-center">Amsterdam</td>
                        <!-- <td class="text-center">
                            <div class="badge badge-info">On Hold</div>
                          </td> -->
                        <td class="text-center">
                          <button type="button" id="PopoverCustomT-4" class="btn btn-primary btn-sm">
                            Details
                          </button>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
          <div class="row">
            <div class="col-md-6 col-lg-3">
              <div class="card-shadow-danger mb-3 widget-chart widget-chart2 text-left card">
                <div class="widget-content">
                  <div class="widget-content-outer">
                    <div class="widget-content-wrapper">
                      <div class="widget-content-left pr-2 fsize-1">
                        <div class="widget-numbers mt-0 fsize-3 text-danger">
                          71%
                        </div>
                      </div>
                      <div class="widget-content-right w-100">
                        <div class="progress-bar-xs progress">
                          <div class="progress-bar bg-danger" role="progressbar" aria-valuenow="71" aria-valuemin="0"
                            aria-valuemax="100" style="width: 71%"></div>
                        </div>
                      </div>
                    </div>
                    <div class="widget-content-left fsize-1">
                      <div class="text-muted opacity-6">Income Target</div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="col-md-6 col-lg-3">
              <div class="card-shadow-success mb-3 widget-chart widget-chart2 text-left card">
                <div class="widget-content">
                  <div class="widget-content-outer">
                    <div class="widget-content-wrapper">
                      <div class="widget-content-left pr-2 fsize-1">
                        <div class="widget-numbers mt-0 fsize-3 text-success">
                          54%
                        </div>
                      </div>
                      <div class="widget-content-right w-100">
                        <div class="progress-bar-xs progress">
                          <div class="progress-bar bg-success" role="progressbar" aria-valuenow="54" aria-valuemin="0"
                            aria-valuemax="100" style="width: 54%"></div>
                        </div>
                      </div>
                    </div>
                    <div class="widget-content-left fsize-1">
                      <div class="text-muted opacity-6">Expenses Target</div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="col-md-6 col-lg-3">
              <div class="card-shadow-warning mb-3 widget-chart widget-chart2 text-left card">
                <div class="widget-content">
                  <div class="widget-content-outer">
                    <div class="widget-content-wrapper">
                      <div class="widget-content-left pr-2 fsize-1">
                        <div class="widget-numbers mt-0 fsize-3 text-warning">
                          32%
                        </div>
                      </div>
                      <div class="widget-content-right w-100">
                        <div class="progress-bar-xs progress">
                          <div class="progress-bar bg-warning" role="progressbar" aria-valuenow="32" aria-valuemin="0"
                            aria-valuemax="100" style="width: 32%"></div>
                        </div>
                      </div>
                    </div>
                    <div class="widget-content-left fsize-1">
                      <div class="text-muted opacity-6">Spendings Target</div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="col-md-6 col-lg-3">
              <div class="card-shadow-info mb-3 widget-chart widget-chart2 text-left card">
                <div class="widget-content">
                  <div class="widget-content-outer">
                    <div class="widget-content-wrapper">
                      <div class="widget-content-left pr-2 fsize-1">
                        <div class="widget-numbers mt-0 fsize-3 text-info">
                          89%
                        </div>
                      </div>
                      <div class="widget-content-right w-100">
                        <div class="progress-bar-xs progress">
                          <div class="progress-bar bg-info" role="progressbar" aria-valuenow="89" aria-valuemin="0"
                            aria-valuemax="100" style="width: 89%"></div>
                        </div>
                      </div>
                    </div>
                    <div class="widget-content-left fsize-1">
                      <div class="text-muted opacity-6">Totals Target</div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <script src="http://maps.google.com/maps/api/js?sensor=true"></script>
      </div>
    </div>
    <script type="text/javascript"
      src="https://demo.dashboardpack.com/architectui-html-free/assets/scripts/main.js"></script>
</body>

</html>